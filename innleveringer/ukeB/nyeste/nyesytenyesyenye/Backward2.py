from math import exp
#importing what I need

def f(t):
    return exp(-t)
#function for the derivation

def f_exact(t):
    return -exp(-t)
#the exact value which i will use to measure the Error

class Diff(object):
    def __init__(self, f, h=1E-5):
        self.f = f
        self.h = float(h)
        #The information which will be stored in this class and the other classes will inherit from

class Backward1(Diff):
    def __call__(self, x):
        f, h = self.f, self.h
        return (f(x) - f(x-h))/h
        #The standard aproximation of the derivation, if h goes to zero it is very accurate

class Backward2(Diff):
    def __call__(self, x):
        f, h = self.f, self.h
        return (f(x - 2*h) - 4 * f(x - h) + 3 * f(x))/ (float(2*h))
        #returns the secound order formula for derivation, which theoritcally should be more accurate, we will find out

print "---------------------------------------------------------------------------------------------------------"
print "|      h-value      |   Backward1-value  |   Error Backward1  |     Backward2      |   Error Backward2  |"
print "---------------------------------------------------------------------------------------------------------"
#Good looking table, I think

for k in range(15): #k values from 0 to 14
    t = 0
    h = 2**(-k)
    a = Backward1(f, h)
    b = Backward2(f, h)
    print "|%19.16f|%20.16f|%20.16f|%20.16f|%20.16f|" % (h, a(0), abs(f_exact(0) - a(0)), b(0), abs(b(0) - f_exact(0)))
    #the print statement which will hold the information
    #by looking at the numbers we see that Backward2 is a better method, the error is lower as h decreases
print "---------------------------------------------------------------------------------------------------------"
#finishing the table

"""
terminal > python Backward2.py
---------------------------------------------------------------------------------------------------------
|      h-value      |   Backward1-value  |   Error Backward1  |     Backward2      |   Error Backward2  |
---------------------------------------------------------------------------------------------------------
| 1.0000000000000000| -1.7182818284590451|  0.7182818284590451| -0.2420356074527650|  0.7579643925472350|
| 0.5000000000000000| -1.2974425414002564|  0.2974425414002564| -0.8766032543414677|  0.1233967456585323|
| 0.2500000000000000| -1.1361016667509656|  0.1361016667509656| -0.9747607921016748|  0.0252392078983252|
| 0.1250000000000000| -1.0651876245346106|  0.0651876245346106| -0.9942735823182556|  0.0057264176817444|
| 0.0625000000000000| -1.0319113426857491|  0.0319113426857491| -0.9986350608368895|  0.0013649391631105|
| 0.0312500000000000| -1.0157890399712883|  0.0157890399712883| -0.9996667372568311|  0.0003332627431689|
| 0.0156250000000000| -1.0078533495478865|  0.0078533495478865| -0.9999176591244918|  0.0000823408755082|
| 0.0078125000000000| -1.0039164424253499|  0.0039164424253499| -0.9999795353028276|  0.0000204646971724|
| 0.0039062500000000| -1.0019556706169510|  0.0019556706169510| -0.9999948988085521|  0.0000051011914479|
| 0.0019531250000000| -1.0009771985934321|  0.0009771985934321| -0.9999987265698564|  0.0000012734301436|
| 0.0009765625000000| -1.0004884402344487|  0.0004884402344487| -0.9999996818755790|  0.0000003181244210|
| 0.0004882812500000| -1.0002441803662805|  0.0002441803662805| -0.9999999204983396|  0.0000000795016604|
| 0.0002441406250000| -1.0001220802469106|  0.0001220802469106| -0.9999999801275408|  0.0000000198724592|
| 0.0001220703125000| -1.0000610376391705|  0.0000610376391705| -0.9999999950305209|  0.0000000049694791|
| 0.0000610351562500| -1.0000305182002194|  0.0000305182002194| -0.9999999987630872|  0.0000000012369128|
---------------------------------------------------------------------------------------------------------

"""
